// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PFE_EMI.Data;

namespace PFE_EMI.Migrations
{
    [DbContext(typeof(PFEContext))]
    partial class PFEContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PFE_EMI.Models.DemandeEncadrements", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ETAT")
                        .HasColumnType("int");

                    b.Property<int?>("EtudiantID")
                        .HasColumnType("int");

                    b.Property<int>("ID_Etudiant")
                        .HasColumnType("int");

                    b.Property<string>("ID_Prof")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfesseurID_prof")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SujetPFE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_depot")
                        .HasColumnType("datetime2");

                    b.Property<string>("liens_complementaires")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EtudiantID");

                    b.HasIndex("ProfesseurID_prof");

                    b.ToTable("DemandesEncadrements");
                });

            modelBuilder.Entity("PFE_EMI.Models.Departement", b =>
                {
                    b.Property<string>("code_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ID_chef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfesseurID_prof")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code_ID");

                    b.HasIndex("ProfesseurID_prof");

                    b.ToTable("Departement");
                });

            modelBuilder.Entity("PFE_EMI.Models.Etudiant", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departementcode_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPESID_specialty")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Specialty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Departementcode_ID");

                    b.HasIndex("SPESID_specialty");

                    b.ToTable("Etudiant");
                });

            modelBuilder.Entity("PFE_EMI.Models.PFE", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProfesseurID_prof")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("id_prof")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_student")
                        .HasColumnType("int");

                    b.Property<string>("lien_PFE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sujet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProfesseurID_prof");

                    b.HasIndex("id_student")
                        .IsUnique();

                    b.ToTable("PFE");
                });

            modelBuilder.Entity("PFE_EMI.Models.Professeur", b =>
                {
                    b.Property<string>("ID_prof")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Disponible")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_prof");

                    b.ToTable("Professeur");
                });

            modelBuilder.Entity("PFE_EMI.Models.ProfessorDepartment", b =>
                {
                    b.Property<string>("ID_prof")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Departementcode_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ID_departement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfesseurID_prof")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID_prof");

                    b.HasIndex("Departementcode_ID");

                    b.HasIndex("ProfesseurID_prof");

                    b.ToTable("ProfessorDepartment");
                });

            modelBuilder.Entity("PFE_EMI.Models.RemarqueProf", b =>
                {
                    b.Property<int>("id_remarque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EtudiantID")
                        .HasColumnType("int");

                    b.Property<string>("ProfesseurID_prof")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("date_remarque")
                        .HasColumnType("datetime2");

                    b.Property<string>("id_prof")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_student")
                        .HasColumnType("int");

                    b.Property<string>("liens_complementaires")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("remarque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("seen")
                        .HasColumnType("bit");

                    b.HasKey("id_remarque");

                    b.HasIndex("EtudiantID");

                    b.HasIndex("ProfesseurID_prof");

                    b.ToTable("RemarquesProf");
                });

            modelBuilder.Entity("PFE_EMI.Models.Specialty", b =>
                {
                    b.Property<string>("ID_specialty")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Departementcode_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("code_dept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_specialty");

                    b.HasIndex("Departementcode_ID");

                    b.ToTable("Specialite");
                });

            modelBuilder.Entity("PFE_EMI.Models.roles.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("PFE_EMI.Models.DemandeEncadrements", b =>
                {
                    b.HasOne("PFE_EMI.Models.Etudiant", "Etudiant")
                        .WithMany("DemandesEncadrement")
                        .HasForeignKey("EtudiantID");

                    b.HasOne("PFE_EMI.Models.Professeur", "Professeur")
                        .WithMany("DemandesEncadrements")
                        .HasForeignKey("ProfesseurID_prof");
                });

            modelBuilder.Entity("PFE_EMI.Models.Departement", b =>
                {
                    b.HasOne("PFE_EMI.Models.Professeur", "Professeur")
                        .WithMany()
                        .HasForeignKey("ProfesseurID_prof");
                });

            modelBuilder.Entity("PFE_EMI.Models.Etudiant", b =>
                {
                    b.HasOne("PFE_EMI.Models.Departement", "Departement")
                        .WithMany("Etudiants")
                        .HasForeignKey("Departementcode_ID");

                    b.HasOne("PFE_EMI.Models.Specialty", "SPES")
                        .WithMany()
                        .HasForeignKey("SPESID_specialty");
                });

            modelBuilder.Entity("PFE_EMI.Models.PFE", b =>
                {
                    b.HasOne("PFE_EMI.Models.Professeur", "Professeur")
                        .WithMany("PFE")
                        .HasForeignKey("ProfesseurID_prof");

                    b.HasOne("PFE_EMI.Models.Etudiant", "Etudiant")
                        .WithOne("PFE")
                        .HasForeignKey("PFE_EMI.Models.PFE", "id_student")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PFE_EMI.Models.ProfessorDepartment", b =>
                {
                    b.HasOne("PFE_EMI.Models.Departement", "Departement")
                        .WithMany("ProfessorDepartments")
                        .HasForeignKey("Departementcode_ID");

                    b.HasOne("PFE_EMI.Models.Professeur", "Professeur")
                        .WithMany("ProfessorDepartments")
                        .HasForeignKey("ProfesseurID_prof");
                });

            modelBuilder.Entity("PFE_EMI.Models.RemarqueProf", b =>
                {
                    b.HasOne("PFE_EMI.Models.Etudiant", "Etudiant")
                        .WithMany("RemarquesProf")
                        .HasForeignKey("EtudiantID");

                    b.HasOne("PFE_EMI.Models.Professeur", "Professeur")
                        .WithMany("RemarquesProf")
                        .HasForeignKey("ProfesseurID_prof");
                });

            modelBuilder.Entity("PFE_EMI.Models.Specialty", b =>
                {
                    b.HasOne("PFE_EMI.Models.Departement", "Departement")
                        .WithMany("Specialty")
                        .HasForeignKey("Departementcode_ID");
                });
#pragma warning restore 612, 618
        }
    }
}
